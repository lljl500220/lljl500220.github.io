const n=JSON.parse(`{"key":"v-06a12cf4","path":"/posts/learn/vue/proxy.html","title":"ES6的代理模式 Proxy","lang":"zh-CN","frontmatter":{"title":"ES6的代理模式 Proxy","icon":"javascript","category":["javascript"],"tag":["javascript"],"description":"Object.defineProperty 在vue3出世后，总会遇到一个新的面试题:说一些vue2与vue3的区别。作为一个前端开发，最先想到的当然就是响应式的更改， 基础原理 在vue2中，我们通过Object.defineProperty来实现数据的响应式： let obj = { name:'luolj', age:18 } Object.defineProperty(obj,'name',{ get(){ return '帅比' }, set(newValue){ console.log('名称已经被修改为：'+newValue) } }) console.log(obj.name) obj.name = 'luolj2' console.log(obj.name)","head":[["meta",{"property":"og:url","content":"https://lljl500220.github.io/posts/learn/vue/proxy.html"}],["meta",{"property":"og:site_name","content":"秦篆"}],["meta",{"property":"og:title","content":"ES6的代理模式 Proxy"}],["meta",{"property":"og:description","content":"Object.defineProperty 在vue3出世后，总会遇到一个新的面试题:说一些vue2与vue3的区别。作为一个前端开发，最先想到的当然就是响应式的更改， 基础原理 在vue2中，我们通过Object.defineProperty来实现数据的响应式： let obj = { name:'luolj', age:18 } Object.defineProperty(obj,'name',{ get(){ return '帅比' }, set(newValue){ console.log('名称已经被修改为：'+newValue) } }) console.log(obj.name) obj.name = 'luolj2' console.log(obj.name)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-15T09:08:37.000Z"}],["meta",{"property":"article:tag","content":"javascript"}],["meta",{"property":"article:modified_time","content":"2024-04-15T09:08:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ES6的代理模式 Proxy\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-15T09:08:37.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Object.defineProperty","slug":"object-defineproperty","link":"#object-defineproperty","children":[{"level":3,"title":"基础原理","slug":"基础原理","link":"#基础原理","children":[]},{"level":3,"title":"vue2中是怎么使用的呢","slug":"vue2中是怎么使用的呢","link":"#vue2中是怎么使用的呢","children":[]}]},{"level":2,"title":"Proxy","slug":"proxy","link":"#proxy","children":[{"level":3,"title":"Proxy的基本使用","slug":"proxy的基本使用","link":"#proxy的基本使用","children":[]},{"level":3,"title":"为什么使用Proxy","slug":"为什么使用proxy","link":"#为什么使用proxy","children":[]},{"level":3,"title":"弊端","slug":"弊端","link":"#弊端","children":[]}]}],"git":{"createdTime":1713172117000,"updatedTime":1713172117000,"contributors":[{"name":"luolj","email":"luolj@si-tech.com.cn","commits":1}]},"readingTime":{"minutes":4.78,"words":1434},"filePathRelative":"posts/learn/vue/proxy.md","localizedDate":"2024年4月15日","excerpt":"<h2> Object.defineProperty</h2>\\n<p>在vue3出世后，总会遇到一个新的面试题:说一些vue2与vue3的区别。作为一个前端开发，最先想到的当然就是响应式的更改，</p>\\n<h3> 基础原理</h3>\\n<p>在vue2中，我们通过Object.defineProperty来实现数据的响应式：</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">let</span> obj <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token literal-property property\\">name</span><span class=\\"token operator\\">:</span><span class=\\"token string\\">'luolj'</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token literal-property property\\">age</span><span class=\\"token operator\\">:</span><span class=\\"token number\\">18</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\nObject<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">defineProperty</span><span class=\\"token punctuation\\">(</span>obj<span class=\\"token punctuation\\">,</span><span class=\\"token string\\">'name'</span><span class=\\"token punctuation\\">,</span><span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function\\">get</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token string\\">'帅比'</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token function\\">set</span><span class=\\"token punctuation\\">(</span>newValue<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'名称已经被修改为：'</span><span class=\\"token operator\\">+</span>newValue<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>obj<span class=\\"token punctuation\\">.</span>name<span class=\\"token punctuation\\">)</span>\\nobj<span class=\\"token punctuation\\">.</span>name <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'luolj2'</span>\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>obj<span class=\\"token punctuation\\">.</span>name<span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
