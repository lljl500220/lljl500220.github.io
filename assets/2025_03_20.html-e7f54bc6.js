const e=JSON.parse('{"key":"v-ae53ef3a","path":"/posts/learn/algorithm/LeetCode/2025_03_20.html","title":"2025-03-20","lang":"zh-CN","frontmatter":{"title":"2025-03-20","icon":"code","article":false,"isOriginal":true,"category":["算法"],"tag":["typeScript","algorithm"],"description":"139. 单词拆分 给你一个字符串 s 和一个字符串列表 wordDict 作为字典。如果可以利用字典中出现的一个或多个单词拼接出 s 则返回 true。 这种一看就是后面的判断需要前面的条件,并且前面还可以继续拆分的题,一看就是动态规划 动态规划的基本思想可以看这篇 这题可以这样看:从最后一位,假设是leetCode,那么把e排除,看leetCod 是否能够在字典中找到对应的字符串拼接起来,同理,把d去掉,看leetCo,是不是就非常容易理解,那么可以倒着循环,也可以正着循环,反正都一样.","head":[["meta",{"property":"og:url","content":"https://lljl500220.github.io/posts/learn/algorithm/LeetCode/2025_03_20.html"}],["meta",{"property":"og:site_name","content":"秦篆"}],["meta",{"property":"og:title","content":"2025-03-20"}],["meta",{"property":"og:description","content":"139. 单词拆分 给你一个字符串 s 和一个字符串列表 wordDict 作为字典。如果可以利用字典中出现的一个或多个单词拼接出 s 则返回 true。 这种一看就是后面的判断需要前面的条件,并且前面还可以继续拆分的题,一看就是动态规划 动态规划的基本思想可以看这篇 这题可以这样看:从最后一位,假设是leetCode,那么把e排除,看leetCod 是否能够在字典中找到对应的字符串拼接起来,同理,把d去掉,看leetCo,是不是就非常容易理解,那么可以倒着循环,也可以正着循环,反正都一样."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-20T15:14:22.000Z"}],["meta",{"property":"article:tag","content":"typeScript"}],["meta",{"property":"article:tag","content":"algorithm"}],["meta",{"property":"article:modified_time","content":"2025-03-20T15:14:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"2025-03-20\\",\\"description\\":\\"139. 单词拆分 给你一个字符串 s 和一个字符串列表 wordDict 作为字典。如果可以利用字典中出现的一个或多个单词拼接出 s 则返回 true。 这种一看就是后面的判断需要前面的条件,并且前面还可以继续拆分的题,一看就是动态规划 动态规划的基本思想可以看这篇 这题可以这样看:从最后一位,假设是leetCode,那么把e排除,看leetCod 是否能够在字典中找到对应的字符串拼接起来,同理,把d去掉,看leetCo,是不是就非常容易理解,那么可以倒着循环,也可以正着循环,反正都一样.\\"}"]]},"headers":[{"level":2,"title":"139. 单词拆分","slug":"_139-单词拆分","link":"#_139-单词拆分","children":[]}],"git":{"createdTime":1742483662000,"updatedTime":1742483662000,"contributors":[{"name":"lljl500220","email":"1723377108@qq.com","commits":1}]},"readingTime":{"minutes":1.08,"words":325},"filePathRelative":"posts/learn/algorithm/LeetCode/2025_03_20.md","localizedDate":"2025年3月20日","excerpt":"<h2> 139. 单词拆分</h2>\\n<p>给你一个字符串 s 和一个字符串列表 wordDict 作为字典。如果可以利用字典中出现的一个或多个单词拼接出 s 则返回 true。</p>\\n<p>这种一看就是后面的判断需要前面的条件,并且前面还可以继续拆分的题,一看就是动态规划\\n动态规划的基本思想可以<a href=\\"/posts/learn/algorithm/learnAndUse/dp.html\\" target=\\"blank\\">看这篇</a></p>\\n<p>这题可以这样看:从最后一位,假设是leetCode,那么把e排除,看leetCod 是否能够在字典中找到对应的字符串拼接起来,同理,把d去掉,看leetCo,是不是就非常容易理解,那么可以倒着循环,也可以正着循环,反正都一样.</p>","autoDesc":true}');export{e as data};
