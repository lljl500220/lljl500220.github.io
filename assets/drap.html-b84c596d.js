import{_ as n,V as s,W as a,X as t,Y as p,a2 as e}from"./framework-82b537ca.js";const o="/learn/drag_start.png",c="/learn/drag.png",u="/learn/drap_center.png",l={},i=p("p",null,"前两日收到极客公众号的广告推送，看到一道面试题，内容大约是：html5实现拖拽的方式有哪些？ 自问我当时也只能粗浅的知道有鼠标事件或者drap api，但是具体怎么实现，还是不太清楚，故趁此机会 温故知新。",-1),k=e(`<p>话不多说，直接上代码</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- 放置拖拽元素的容器 --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>div1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@drop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>drop<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@dragover</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dragover<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- 被拖拽的元素 --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 120px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 120px<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> red</span><span class="token punctuation">&quot;</span></span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>drag1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">draggable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>
       <span class="token attr-name">@dragstart</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>drag<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">//在进入容器时阻止默认事件</span>
<span class="token keyword">function</span> <span class="token function">dragover</span><span class="token punctuation">(</span>ev<span class="token operator">:</span><span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  ev<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//开始拖拽元素时，将被拖动的元素转换类型</span>
<span class="token keyword">function</span> <span class="token function">drag</span><span class="token punctuation">(</span>ev<span class="token operator">:</span><span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  ev<span class="token punctuation">.</span>dataTransfer<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token string">&quot;Text&quot;</span><span class="token punctuation">,</span> ev<span class="token punctuation">.</span>target<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//放置该元素时，阻止默认事件，否则会出现当拖拽的元素为链接形式，会被浏览器直接打开的问题</span>
<span class="token comment">//从事件消息中获取到元素内容，将内容放置到目标容器中</span>
<span class="token keyword">function</span> <span class="token function">drop</span><span class="token punctuation">(</span>ev<span class="token operator">:</span><span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  ev<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> data <span class="token operator">=</span> ev<span class="token punctuation">.</span>dataTransfer<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token string">&quot;Text&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  ev<span class="token punctuation">.</span>target<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这方法能够快速的拖动元素到目标容器中，但是一旦出现某种情况，需要自由的拖动元素到任意位置，一般就需要使用到鼠标事件，比较麻烦。 通过css属性设置，也能达到响应的效果。</p><p>思路是这样的：仍然使用drag拖动元素，给一个比较大的目标容器，计算鼠标坐标和容器边框的相对距离，对拖动元素设置css即可。比如上方的代码， 最终drag1的元素会被拖动到dorp1的左上方。</p><div style="text-align:center;"><p><img src="`+o+'" alt="上方代码拖动之前" width="200" height="200" loading="lazy"><img src="'+c+`" alt="上方代码拖动结果" width="200" height="200" loading="lazy"></p></div><p>如果我想让dorp1放置到drag1的右下方，那就需要自己去定位和设置css属性了。</p><p>上方代码修改如下</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">drop</span><span class="token punctuation">(</span>ev<span class="token operator">:</span><span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  ev<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> data <span class="token operator">=</span> ev<span class="token punctuation">.</span>dataTransfer<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token string">&quot;Text&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  ev<span class="token punctuation">.</span>target<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">setupPosition</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">setupPosition</span><span class="token punctuation">(</span>target<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">,</span>left<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">,</span>top<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">let</span> doc<span class="token operator">:</span><span class="token builtin">any</span> <span class="token operator">=</span> window<span class="token punctuation">.</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
  doc<span class="token punctuation">.</span>style<span class="token punctuation">.</span>position <span class="token operator">=</span> <span class="token string">&quot;absolute&quot;</span>
  doc<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> left<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;px&quot;</span>
  doc<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> left<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;px&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div style="text-align:center;"><figure><img src="`+u+'" alt="上方代码拖动结果" width="200" height="200" tabindex="0" loading="lazy"><figcaption>上方代码拖动结果</figcaption></figure></div><p>实现的效果从拖动到左上方变成了居中，当然也可以设置其它css属性。</p>',11);function r(d,v){return s(),a("div",null,[i,t(" more "),k])}const g=n(l,[["render",r],["__file","drap.html.vue"]]);export{g as default};
