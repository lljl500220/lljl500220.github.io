const n=JSON.parse(`{"key":"v-513500fa","path":"/posts/learn/vue/computed.html","title":"computed","lang":"zh-CN","frontmatter":{"title":"computed","icon":"vue","category":["vue"],"prev":"./reactive.md","tag":["vue3"],"description":"上一篇文章呢，我们讲了一下vue3的响应式原理，这一篇呢，我们来讲一下vue3中的计算属性computed。 computed 计算属性呢是响应式的一大组成部分，在实际开发中也存在着非常高的使用频率，接下来我们说一下computed的两种实现。 选项式 const obj = reactive({ name:'老罗', }) const age = ref(18) const myName = computed({ get:()=&gt;{ return obj.name + age.value }, set:(val)=&gt;{ obj.name = val } }) const doClick = ()=&gt;{ myName.value = '帅比' } const getName = ()=&gt;{ console.log(myName.value) }","head":[["meta",{"property":"og:url","content":"https://lljl500220.github.io/posts/learn/vue/computed.html"}],["meta",{"property":"og:site_name","content":"秦篆"}],["meta",{"property":"og:title","content":"computed"}],["meta",{"property":"og:description","content":"上一篇文章呢，我们讲了一下vue3的响应式原理，这一篇呢，我们来讲一下vue3中的计算属性computed。 computed 计算属性呢是响应式的一大组成部分，在实际开发中也存在着非常高的使用频率，接下来我们说一下computed的两种实现。 选项式 const obj = reactive({ name:'老罗', }) const age = ref(18) const myName = computed({ get:()=&gt;{ return obj.name + age.value }, set:(val)=&gt;{ obj.name = val } }) const doClick = ()=&gt;{ myName.value = '帅比' } const getName = ()=&gt;{ console.log(myName.value) }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-17T05:52:21.000Z"}],["meta",{"property":"article:tag","content":"vue3"}],["meta",{"property":"article:modified_time","content":"2024-04-17T05:52:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"computed\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-17T05:52:21.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"computed","slug":"computed","link":"#computed","children":[{"level":3,"title":"选项式","slug":"选项式","link":"#选项式","children":[]},{"level":3,"title":"函数式","slug":"函数式","link":"#函数式","children":[]}]},{"level":2,"title":"源码阅读","slug":"源码阅读","link":"#源码阅读","children":[]},{"level":2,"title":"手写computed","slug":"手写computed","link":"#手写computed","children":[]}],"git":{"createdTime":1713333141000,"updatedTime":1713333141000,"contributors":[{"name":"luolj","email":"luolj@si-tech.com.cn","commits":1}]},"readingTime":{"minutes":4.4,"words":1321},"filePathRelative":"posts/learn/vue/computed.md","localizedDate":"2024年4月17日","excerpt":"<p>上一篇文章呢，我们讲了一下vue3的响应式原理，这一篇呢，我们来讲一下vue3中的计算属性computed。</p>\\n<h2> computed</h2>\\n<p>计算属性呢是响应式的一大组成部分，在实际开发中也存在着非常高的使用频率，接下来我们说一下computed的两种实现。</p>\\n<h3> 选项式</h3>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">const</span> obj <span class=\\"token operator\\">=</span> <span class=\\"token function\\">reactive</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token literal-property property\\">name</span><span class=\\"token operator\\">:</span><span class=\\"token string\\">'老罗'</span><span class=\\"token punctuation\\">,</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token keyword\\">const</span> age <span class=\\"token operator\\">=</span> <span class=\\"token function\\">ref</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">18</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token keyword\\">const</span> myName <span class=\\"token operator\\">=</span> <span class=\\"token function\\">computed</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function-variable function\\">get</span><span class=\\"token operator\\">:</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">=&gt;</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> obj<span class=\\"token punctuation\\">.</span>name <span class=\\"token operator\\">+</span> age<span class=\\"token punctuation\\">.</span>value\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token function-variable function\\">set</span><span class=\\"token operator\\">:</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">val</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">=&gt;</span><span class=\\"token punctuation\\">{</span>\\n        obj<span class=\\"token punctuation\\">.</span>name <span class=\\"token operator\\">=</span> val\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token keyword\\">const</span> <span class=\\"token function-variable function\\">doClick</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">=&gt;</span><span class=\\"token punctuation\\">{</span>\\n    myName<span class=\\"token punctuation\\">.</span>value <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'帅比'</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">const</span> <span class=\\"token function-variable function\\">getName</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">=&gt;</span><span class=\\"token punctuation\\">{</span>\\n    console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>myName<span class=\\"token punctuation\\">.</span>value<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
