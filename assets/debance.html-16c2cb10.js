const n=JSON.parse(`{"key":"v-8ba2d934","path":"/posts/learn/note/debance.html","title":"优雅的实现防抖","lang":"zh-CN","frontmatter":{"title":"优雅的实现防抖","icon":"javascript","isOriginal":true,"toc":true,"category":["前端进阶"],"tag":["javascript"],"description":"防抖的使用场景 防抖在前端的应用非常常见，比如大屏-页面缩放,输入搜索-防抖和校验,按钮点击-不希望频繁的被点击,滚动限制-希望在滚动一定距离后或者一定时间后再发生加载事件等。 我们举例一个输入搜索来说，其它的也是同样的原理。 比如现在有如下代码 &lt;script setup lang=\\"ts\\"&gt; import {ref} from \\"vue\\"; import {findUserApi} from \\"../api/friend\\" const inputStr = ref('') const input = () =&gt;{ findUserApi({data:inputStr.value}).then((res)=&gt;{ console.log(res) }) } &lt;/script&gt; &lt;template&gt; &lt;el-input placeholder=\\"测试\\" v-model=\\"inputStr\\" @input=\\"input\\"/&gt; &lt;/template&gt;","head":[["meta",{"property":"og:url","content":"https://lljl500220.github.io/posts/learn/note/debance.html"}],["meta",{"property":"og:site_name","content":"水月洞天"}],["meta",{"property":"og:title","content":"优雅的实现防抖"}],["meta",{"property":"og:description","content":"防抖的使用场景 防抖在前端的应用非常常见，比如大屏-页面缩放,输入搜索-防抖和校验,按钮点击-不希望频繁的被点击,滚动限制-希望在滚动一定距离后或者一定时间后再发生加载事件等。 我们举例一个输入搜索来说，其它的也是同样的原理。 比如现在有如下代码 &lt;script setup lang=\\"ts\\"&gt; import {ref} from \\"vue\\"; import {findUserApi} from \\"../api/friend\\" const inputStr = ref('') const input = () =&gt;{ findUserApi({data:inputStr.value}).then((res)=&gt;{ console.log(res) }) } &lt;/script&gt; &lt;template&gt; &lt;el-input placeholder=\\"测试\\" v-model=\\"inputStr\\" @input=\\"input\\"/&gt; &lt;/template&gt;"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-01T08:03:07.000Z"}],["meta",{"property":"article:tag","content":"javascript"}],["meta",{"property":"article:modified_time","content":"2023-09-01T08:03:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"优雅的实现防抖\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-01T08:03:07.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"防抖的使用场景","slug":"防抖的使用场景","link":"#防抖的使用场景","children":[]},{"level":2,"title":"封装debounce函数","slug":"封装debounce函数","link":"#封装debounce函数","children":[{"level":3,"title":"保证this指向与原函数一致","slug":"保证this指向与原函数一致","link":"#保证this指向与原函数一致","children":[]},{"level":3,"title":"保证参数","slug":"保证参数","link":"#保证参数","children":[]}]},{"level":2,"title":"rxjs实现防抖","slug":"rxjs实现防抖","link":"#rxjs实现防抖","children":[]}],"git":{"createdTime":1693555387000,"updatedTime":1693555387000,"contributors":[{"name":"luolj","email":"luolj@si-tech.com.cn","commits":1}]},"readingTime":{"minutes":3.2,"words":961},"filePathRelative":"posts/learn/note/debance.md","localizedDate":"2023年9月1日","excerpt":"<h2> 防抖的使用场景</h2>\\n<p>防抖在前端的应用非常常见，比如大屏-页面缩放,输入搜索-防抖和校验,按钮点击-不希望频繁的被点击,滚动限制-希望在滚动一定距离后或者一定时间后再发生加载事件等。\\n我们举例一个输入搜索来说，其它的也是同样的原理。<br>\\n比如现在有如下代码</p>\\n<div class=\\"language-vue line-numbers-mode\\" data-ext=\\"vue\\"><pre class=\\"language-vue\\"><code><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>script</span> <span class=\\"token attr-name\\">setup</span> <span class=\\"token attr-name\\">lang</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>ts<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token script\\"><span class=\\"token language-javascript\\">\\n<span class=\\"token keyword\\">import</span> <span class=\\"token punctuation\\">{</span>ref<span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">\\"vue\\"</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token punctuation\\">{</span>findUserApi<span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">\\"../api/friend\\"</span>\\n\\n<span class=\\"token keyword\\">const</span> inputStr <span class=\\"token operator\\">=</span> <span class=\\"token function\\">ref</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">''</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">const</span> <span class=\\"token function-variable function\\">input</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span><span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token function\\">findUserApi</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span><span class=\\"token literal-property property\\">data</span><span class=\\"token operator\\">:</span>inputStr<span class=\\"token punctuation\\">.</span>value<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">then</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">res</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">=&gt;</span><span class=\\"token punctuation\\">{</span>\\n    console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>res<span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n</span></span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>script</span><span class=\\"token punctuation\\">&gt;</span></span>\\n\\n<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>template</span><span class=\\"token punctuation\\">&gt;</span></span>\\n  <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>el-input</span> <span class=\\"token attr-name\\">placeholder</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>测试<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token attr-name\\">v-model</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>inputStr<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token attr-name\\">@input</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>input<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">/&gt;</span></span>\\n<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>template</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
