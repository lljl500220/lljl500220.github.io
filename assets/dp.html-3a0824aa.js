import{_ as e,V as a,W as r,X as i,Y as o,a2 as t}from"./framework-82b537ca.js";const l={},d=o("p",null,"okok，鸽了好久的动态规划，它终于来啦！",-1),c=t('<h2 id="什么是动态规划" tabindex="-1"><a class="header-anchor" href="#什么是动态规划" aria-hidden="true">#</a> 什么是动态规划</h2><p>我愿称之为算法的半壁江山！动态规划是一种解决问题的算法，它的核心思想是将一个大问题分解成一个个小问题，然后将这些小问题的解合并起来，得到大问题的解。<br> ok，作为一个程序员，应该容易的能够想到它的思想：</p><ol><li>将原问题分解成若干个子问题，这些子问题通常能够更加简单的解决。</li><li>自小到大，将这些子问题的解合并起来，得到原问题的解。</li><li>记录子问题的解，避免重复计算。</li></ol><h2 id="动态规划的特点" tabindex="-1"><a class="header-anchor" href="#动态规划的特点" aria-hidden="true">#</a> 动态规划的特点</h2><ol><li>重叠子问题：动态规划的核心是将一个大问题分解成若干个小问题，这些小问题通常是重叠的，也就是说，这些小问题通常会被重复计算。</li><li>最优子结构：动态规划的解通常是由子问题的解合并而来的，也就是说，子问题的解是最优的，那么原问题的解也是最优的。</li></ol><h2 id="动态规划的实现" tabindex="-1"><a class="header-anchor" href="#动态规划的实现" aria-hidden="true">#</a> 动态规划的实现</h2><p>接下来我们通过几个例子来说说动态规划如何实现。</p>',7);function n(h,s){return a(),r("div",null,[d,i(" more "),c])}const p=e(l,[["render",n],["__file","dp.html.vue"]]);export{p as default};
