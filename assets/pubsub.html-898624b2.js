const e=JSON.parse('{"key":"v-64f41459","path":"/posts/learn/designPattern/pubsub.html","title":"发布订阅模式","lang":"zh-CN","frontmatter":{"title":"发布订阅模式","icon":"return","description":"前端中的发布订阅模式 身为前端开发，我们接触订阅发布模式的场景是相当多的，比如Vue的$emit和$on，React的Context和Redux等等。这些都是发布订阅模式的应用。 再者，抛去框架之外，我们非常常用的一个场景就是addEventListener和dispatchEvent，这两个方法就是发布订阅模式的应用。 以addEventListener为例：","head":[["meta",{"property":"og:url","content":"https://lljl500220.github.io/posts/learn/designPattern/pubsub.html"}],["meta",{"property":"og:site_name","content":"秦篆"}],["meta",{"property":"og:title","content":"发布订阅模式"}],["meta",{"property":"og:description","content":"前端中的发布订阅模式 身为前端开发，我们接触订阅发布模式的场景是相当多的，比如Vue的$emit和$on，React的Context和Redux等等。这些都是发布订阅模式的应用。 再者，抛去框架之外，我们非常常用的一个场景就是addEventListener和dispatchEvent，这两个方法就是发布订阅模式的应用。 以addEventListener为例："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-01T08:26:56.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-01T08:26:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"发布订阅模式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-01T08:26:56.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"前端中的发布订阅模式","slug":"前端中的发布订阅模式","link":"#前端中的发布订阅模式","children":[]},{"level":2,"title":"发布订阅模式的实现","slug":"发布订阅模式的实现","link":"#发布订阅模式的实现","children":[]},{"level":2,"title":"代码","slug":"代码","link":"#代码","children":[]}],"git":{"createdTime":1711960016000,"updatedTime":1711960016000,"contributors":[{"name":"luolj","email":"luolj@si-tech.com.cn","commits":1}]},"readingTime":{"minutes":2.94,"words":883},"filePathRelative":"posts/learn/designPattern/pubsub.md","localizedDate":"2024年4月1日","excerpt":"<h2> 前端中的发布订阅模式</h2>\\n<p>身为前端开发，我们接触订阅发布模式的场景是相当多的，比如<code>Vue</code>的<code>$emit</code>和<code>$on</code>，<code>React</code>的<code>Context</code>和<code>Redux</code>等等。这些都是发布订阅模式的应用。<br>\\n再者，抛去框架之外，我们非常常用的一个场景就是<code>addEventListener</code>和<code>dispatchEvent</code>，这两个方法就是发布订阅模式的应用。<br>\\n以addEventListener为例：</p>","autoDesc":true}');export{e as data};
